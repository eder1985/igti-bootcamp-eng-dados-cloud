{
	"jobConfig": {
		"name": "glue-job-imdb-movies",
		"description": "",
		"role": "arn:aws:iam::086556745643:role/glue-role-s3",
		"command": "glueetl",
		"version": "4.0",
		"runtime": null,
		"workerType": "G.1X",
		"numberOfWorkers": 10,
		"maxCapacity": 10,
		"maxRetries": 0,
		"timeout": 2880,
		"maxConcurrentRuns": 1,
		"security": "none",
		"scriptName": "glue-job-imdb-movies.py",
		"scriptLocation": "s3://datalake-eder-igti-edc/glue-scripts/",
		"language": "python-3",
		"jobParameters": [],
		"tags": [],
		"jobMode": "DEVELOPER_MODE",
		"createdOn": "2023-07-23T10:08:52.237Z",
		"developerMode": true,
		"connectionsList": [],
		"temporaryDirectory": "s3://datalake-eder-igti-edc/temporary/",
		"logging": true,
		"glueHiveMetastore": true,
		"etlAutoTuning": false,
		"metrics": true,
		"spark": true,
		"bookmark": "job-bookmark-disable",
		"sparkPath": "s3://datalake-eder-igti-edc/sparkHistoryLogs/",
		"flexExecution": false,
		"minFlexWorkers": null
	},
	"dag": {},
	"hasBeenSaved": false,
	"script": "import sys\nfrom awsglue.transforms import *\nfrom awsglue.utils import getResolvedOptions\nfrom pyspark.context import SparkContext\nfrom awsglue.context import GlueContext\nfrom awsglue.job import Job\n\n## @params: [JOB_NAME]\nargs = getResolvedOptions(sys.argv, ['JOB_NAME'])\n\nsc = SparkContext()\nglueContext = GlueContext(sc)\nspark = glueContext.spark_session\njob = Job(glueContext)\njob.init(args['JOB_NAME'], args)\n\n# Ler os dados do arquivo fonte\nraw_movies = spark.read.format('csv').option('header', True).option('inferSchema', True).option('delimiter', ',').load('s3://datalake-eder-igti-edc/data/raw/movies/')\n\n# Escrita dos dados no formato parquet\nraw_movies.write.mode('overwrite').format('parquet').save('s3://datalake-eder-igti-edc/data/staging/movies/')\n\n#job.commit()"
}